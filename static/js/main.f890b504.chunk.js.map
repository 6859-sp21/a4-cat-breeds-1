{"version":3,"sources":["components/bar.js","components/catPanel.js","components/catPreview.js","components/catDetail.js","components/cats.js","App.js","reportWebVitals.js","index.js"],"names":["allWidth","orange","Bar","category","height","width","clickFunction","isOn","highlight","useState","hover","setHover","className","style","background","onClick","onMouseEnter","onMouseLeave","TextButton","_","capitalize","TemperList","currentFilter","title","isAllTrue","Object","keys","key","console","log","map","value","includes","BarChart","data","length","Title","CatPanel","selectedCat","toggleSize","sizeFilter","toggleShedding","sheddingFilter","toggleHair","hairFilter","toggleTemper","temperFilter","catSizeData","small","medium","large","catData","cat","sizeKey","size","catSheddingData","minimal","average","seasonal","constant","shedding","catHairData","short","long","selectedCatInfo","find","breed","Temperament","CatPreview","forwardRef","ref","selectCat","src","process","alt","replace","CatDetail","join","weight","grooming","Description","split","info","i","History","CatDisplay","selectCatMain","restartFilter","setSelectedCat","showSource","setShowSource","catName","filteredCats","filter","sizeResult","sheddingResult","hairResult","temperResult","hair","allTemper","temper","found","hideOnOverlayClicked","isVisible","onCloseClicked","visibility","App","setTemperFilter","categoryToggled","newTemperFilter","allTrue","allFalse","setSizeFilter","newSizeFilter","setSheddingFilter","newSheddingFilter","setHairFilter","newHairFilter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f890b504.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport _ from 'lodash';\n\nconst allWidth = 300;\nconst orange = \"#f2a84e\";\n\nconst Bar = ({\n  category,\n  height,\n  width,\n  clickFunction,\n  isOn,\n  highlight\n}) => {\n  const [hover, setHover] = useState(false)\n  return (\n    <div\n      className=\"bar\"\n      style={{\n        height: height,\n        width: width,\n        background: (\n          highlight ?\n            orange:\n          hover? \"grey\" :\n            (isOn ? \"grey\": \"lightgrey\")\n        )\n      }}\n      onClick={() => clickFunction(category)}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    />\n  )\n};\n\n\nconst TextButton = ({\n  category,\n  width,\n  clickFunction,\n  isOn,\n  highlight\n                    }) =>\n{\n  const [hover, setHover] = useState(false)\n  return (\n    <div\n      className=\"text\"\n      style = {\n        {\n          background: (\n        highlight ?\n        orange :\n        hover? \"grey\" :\n        (isOn ? \"grey\": \"lightgrey\")\n        ),\n          width: width\n        }\n      }\n      onClick={() => clickFunction(category)}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      <div>\n        {_.capitalize(category)}\n      </div>\n    </div>\n  )\n}\n\n\n\nconst BarChart = ({\n                    data,\n                    clickFunction,\n                    currentFilter,\n                    title,\n                    highlight\n}) => {\n  let isAllTrue = true;\n  for (const key of Object.keys(data)) {\n    if (!currentFilter[key]) {\n      isAllTrue = false;\n    }\n  }\n\n  const [hover, setHover] = useState(false)\n  return (\n    <div className=\"bar-chart\">\n      <div className=\"title\">\n        {title}\n      </div>\n      {_.map(data, (value, key) => {\n        return (\n          <div className=\"bar-and-text\" key={key}>\n            <Bar\n              height={(!highlight && isAllTrue) ? 0 : value}\n              category={key}\n              clickFunction={clickFunction}\n              isOn={!isAllTrue && currentFilter[key]}\n              width = {(allWidth+5) / Object.keys(data).length - 5}\n              key={`bar${key}`}\n              highlight={highlight ? _.includes(highlight, key) : false}\n            />\n            <TextButton\n              category={key}\n              clickFunction={clickFunction}\n              isOn={!isAllTrue && currentFilter[key]}\n              width = { (allWidth+5) / Object.keys(data).length - 5}\n              key={`text${key}`}\n              highlight={highlight ? _.includes(highlight, key) : false}\n            />\n\n          </div>\n        )\n      })}\n      <div\n        className=\"all-button\"\n        onClick={() => clickFunction(\"all\")}\n        style = {{\n          width: `${allWidth}px`,\n          background: ((\n            hover? \"grey\" :\n              (isAllTrue ? \"grey\": \"lightgrey\")\n          ))\n        }}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        All\n      </div>\n    </div>\n  );\n}\n\nconst TemperList = (\n  {\n    clickFunction,\n    currentFilter,\n    title,\n    highlight\n  }\n) => {\n  let isAllTrue = true;\n  for (const key of Object.keys(currentFilter)) {\n    if (!currentFilter[key]) {\n      isAllTrue = false;\n    }\n  }\n  console.log(highlight);\n  const [hover, setHover] = useState(false)\n\n  return (\n    <div className=\"bar-chart\">\n      <div className=\"title\">\n        {title}\n      </div>\n      {_.map(currentFilter, (value, key) => {\n        return (\n          <div className=\"bar-and-text\" key={key}>\n            <TextButton\n              category={key}\n              clickFunction={clickFunction}\n              isOn={!isAllTrue && currentFilter[key]}\n              width = {(allWidth+5) / 2-5}\n              key={`text${key}`}\n              highlight={highlight ? _.includes(highlight, key) : false}\n            />\n          </div>\n        )\n      })}\n      <div\n        className=\"all-button\"\n        onClick={() => clickFunction(\"all\")}\n        style = {{\n          width: `${allWidth}px`,\n          background: ((\n            hover? \"grey\" :\n              (isAllTrue ? \"grey\": \"lightgrey\")\n          ))\n        }}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        All\n      </div>\n    </div>\n  )\n}\n\nexport { TemperList };\nexport default BarChart;","import catData from \"../cat_metadata.json\";\nimport React, {useState, useEffect} from \"react\";\nimport BarChart, {TemperList} from \"./bar.js\";\nimport _ from 'lodash';\n\nconst Title = () => (\n  <div className=\"title\">\n    <div className=\"catology\">\n      <span className=\"cat\">Cat</span>\n      <span className=\"ology\">ology</span>\n    </div>\n    <div className=\"description\">\n      Catology is what anyone who owns a cat is doomed to practice for\n      the rest of their pet's natual life. Little do most cat owners realize\n      that they are being pulled into this dangerous cult of cats.\n    </div>\n  </div>\n)\n\nconst CatPanel = (\n  {\n    selectedCat,\n    toggleSize,\n    sizeFilter,\n    toggleShedding,\n    sheddingFilter,\n    toggleHair,\n    hairFilter,\n    toggleTemper,\n    temperFilter\n  }) => {\n  let catSizeData = {small: 0, medium: 0, large: 0};\n  for (const cat of catData) {\n    for (const sizeKey of Object.keys(catSizeData)) {\n      if (_.includes(cat.size, sizeKey)) {\n        catSizeData[sizeKey]++;\n      }\n    }\n  }\n\n    let catSheddingData = {minimal: 0, average: 0, seasonal: 0, constant: 0};\n    for (const cat of catData) {\n      for (const key of Object.keys(catSheddingData)) {\n        if (_.includes(cat.shedding, key)) {\n          catSheddingData[key] ++;\n        }\n      }\n    }\n\n  let catHairData = {short: 0, medium: 0, long: 0};\n  for (const cat of catData) {\n    for (const key of Object.keys(catHairData)) {\n      if (_.includes(cat[\"hair length\"], key)) {\n        catHairData[key] ++;\n      }\n    }\n  }\n\n  const selectedCatInfo = _.find(catData, (cat) => cat.breed===selectedCat);\n\n      return (\n    <div className=\"cat-panel\">\n      <Title />\n      <BarChart\n        data={catSizeData}\n        clickFunction={toggleSize}\n        currentFilter={sizeFilter}\n        title=\"Size\"\n        highlight={selectedCatInfo ? selectedCatInfo.size : null}\n      />\n      <BarChart\n        data={catHairData}\n        clickFunction={toggleHair}\n        currentFilter={hairFilter}\n        title = \"Hair Length\"\n        highlight={selectedCatInfo ? selectedCatInfo[\"hair length\"] : null}\n      />\n      <BarChart\n        data={catSheddingData}\n        clickFunction={toggleShedding}\n        currentFilter={sheddingFilter}\n        title = \"Shedding\"\n        highlight={selectedCatInfo ? selectedCatInfo.shedding : null}\n      />\n      <TemperList\n        clickFunction={toggleTemper}\n        currentFilter={temperFilter}\n        title=\"Temper\"\n        highlight={selectedCatInfo ? selectedCatInfo.Temperament : null}\n      />\n    </div>\n  )\n}\n\nexport default CatPanel;\n","import React, {forwardRef} from \"react\";\n\n\nconst CatPreview = forwardRef(({cat, selectCat}, ref) => (\n    <div className=\"cat-card\" onClick={() => selectCat(cat.breed)} ref={ref}>\n      <center>\n        <img src= {process.env.PUBLIC_URL + \"/cat_pictures/\" +cat.breed + '.jpg'} alt={cat.breed} />\n      </center>\n\n      <div className=\"caption\">\n        {cat.breed.replace( /([A-Z])/g, \" $1\" )}\n      </div>\n    </div>\n))\n\nexport default CatPreview;","import React from \"react\";\n\nconst CatDetail = ({cat, selectCat}) => (\n  <div className=\"popup\" onClick={() => selectCat(\"\")}>\n    {!!cat &&\n    <div>\n      <img src= {process.env.PUBLIC_URL + \"/cat_pictures/\" +cat.breed + '.jpg'} alt={cat.breed} />\n      <div className=\"cat-info\">\n        <div className=\"breed-name\">{cat.breed.replace( /([A-Z])/g, \" $1\" )}</div>\n        {\n          cat[\"Alternate names\"]  ?\n          <div className=\"alt-name\">Also Called: {cat[\"Alternate names\"].join(', ')} </div> :\n            <div className=\"facts-title\">Facts: </div>\n        }\n        <div className=\"metadata\">\n          <div className=\"size\">{cat.size.join(' / ')}</div>\n          <div className=\"weight\">{cat.weight.join(' to ')} lb</div>\n          <div className=\"hair\">{cat[\"hair length\"].join(' / ')} hair</div>\n          <div className=\"shedding\">{cat.shedding} shedding</div>\n          <div className=\"grooming\">{cat.grooming} grooming</div>\n        </div>\n\n        <div className=\"description\">\n          {cat.Description.split('\\n').map((info, i) => <div key={i}>{info}</div>)}\n        </div>\n        <div className=\"history\">\n          {cat.History.split('\\n').map((info, i) => <div key={i}>{info}</div>)}\n        </div>\n      </div>\n\n      {/*<div className=\"close-button\" onClick={() => selectCat(\"\")}>close</div>*/}\n    </div>\n    }\n  </div>\n)\n\nexport default CatDetail;","import React, {useState} from \"react\";\nimport catData from \"../cat_metadata.json\";\nimport CatPreview from './catPreview.js';\nimport CatDetail from './catDetail.js';\nimport FlipMove from 'react-flip-move';\n// import Popup from 'react-animated-popup';\nimport {SkyLightStateless} from \"react-skylight\";\n\n\nconst CatDisplay = (\n  {\n    sizeFilter,\n    sheddingFilter,\n    hairFilter,\n    temperFilter,\n    selectCatMain,\n    restartFilter\n}) => {\n\n  const [selectedCat, setSelectedCat] = useState(\"\");\n  const [showSource, setShowSource] = useState(false);\n\n  const selectCat = (catName) => {\n    setSelectedCat(catName);\n    selectCatMain(catName);\n  }\n\n\n  const filteredCats =\n    catData\n      .filter((cat) => {\n        let sizeResult = false;\n        let sheddingResult = false;\n        let hairResult = false;\n        let temperResult = true;\n\n        if (cat.size != null && cat.shedding != null && cat[\"hair length\"] != null) {\n          for (const size of cat.size) {\n            if (sizeFilter[size]) {\n              sizeResult = true;\n            }\n          }\n\n          for (const shedding of cat.shedding) {\n            if (sheddingFilter[shedding]) {\n              sheddingResult = true;\n            }\n          }\n\n          if (cat[\"hair length\"]) {\n            for (const hair of cat[\"hair length\"]) {\n              if (hairFilter[hair]) {\n                hairResult = true;\n              }\n            }\n          }\n\n          let allTemper = true;\n          for (const temper of Object.keys(temperFilter)) {\n            if (!temperFilter[temper]) {\n              allTemper = false;\n            }\n          }\n\n\n          if (!allTemper) {\n            for (const temper of Object.keys(temperFilter)) {\n              if (temperFilter[temper]) {\n                let found = false\n                for (const catTemper of cat.Temperament) {\n                  if (catTemper === temper) {\n                    found = true\n                  }\n                }\n                if (!found) {\n                  temperResult = false;\n                }\n              }\n            }\n          }\n        }\n        return sizeResult && sheddingResult && hairResult && temperResult;\n      })\n\n  return (\n    <div className=\"all-cats\">\n\n      <SkyLightStateless className=\"popup-lib\"\n                         hideOnOverlayClicked\n                         isVisible={selectedCat !== \"\"}\n                         onCloseClicked={() => selectCat(\"\")}\n      >\n        <CatDetail\n          cat={catData.filter((cat) => (cat.breed===selectedCat))[0]}\n          selectCat={selectCat}\n        />\n      </SkyLightStateless>\n\n      <div className=\"cat-display\">\n        <FlipMove className=\"flip-move\">\n          {\n              filteredCats\n              .map((cat, i) =>\n                <CatPreview cat={cat} selectCat={selectCat} key={cat.breed} />\n              )\n          }\n        </FlipMove>\n\n\n        <div className=\"no-more-cats\"\n             style={{\n               visibility: !!filteredCats.length ? \"hidden\": \"visible\"\n             }}\n        >\n          <div>\n            You have run out of cats!\n          </div>\n          <div className=\"restart-filter\"\n               onClick={restartFilter}\n          >\n            Restart\n          </div>\n        </div>\n\n        <div className=\"source-button\"\n             onClick={() => setShowSource(!showSource)}\n             style={\n               {visibility: (filteredCats.length!==0) ? \"visible\" :\"hidden\"}\n             }\n        >\n          Show Sources\n        </div>\n        <div className=\"source\"\n             style={\n               {visibility: (showSource && filteredCats.length!==0) ? \"visible\" :\"hidden\"}\n             }\n        >\n\n          <div\n          >\n            <div className=\"source-title\">\n              Data Source\n            </div>\n\n            <div>\n              Wolfram Alpha API\n            </div>\n          </div>\n          <div>\n            <div className=\"source-title\">\n              Site Name\n            </div>\n            <div>\n              James Grady\n            </div>\n          </div>\n          <div>\n            <div className=\"source-title\">\n              Picture Source\n            </div>\n            <div>\n              <div>\n                vetstreet.com\n              </div>\n              <div>\n                cat-breeds-encyclopedia.com\n              </div>\n              <div>\n                cattime.com\n              </div>\n              <div>\n                pets4homes.com\n              </div>\n              <div>\n                omlet.co.uk\n              </div>\n              <div>\n                petguide.com\n              </div>\n              <div>\n                burmilla.us\n              </div>\n              <div>\n                catbreedselector.com\n              </div>\n              <div>\n                petpaw.com.au\n              </div>\n              <div>\n                my-pet-shop-ds.wikia.com\n              </div>\n              <div>\n                purina.com\n              </div>\n              <div>\n                purrfectcatbreeds.com\n              </div>\n              <div>\n                gccfcats.org\n              </div>\n              <div>\n                cat-breed-info.com\n              </div>\n              <div>\n                localkittensforsale.com\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n\n\n  </div>\n  )\n}\n\nexport default CatDisplay;","import './App.css';\nimport React, {useState} from 'react';\nimport CatPanel from './components/catPanel.js';\nimport CatDisplay from \"./components/cats\";\n\nconst App = () => {\n\n  const [selectedCat, setSelectedCat] = useState(\"\");\n\n  const selectCatMain = (catName) => {\n    setSelectedCat(catName);\n  }\n\n\n  const [temperFilter, setTemperFilter] = useState({\n    \"affectionate\" : true,\n    \"active\": true,\n    \"intelligent\": true,\n    \"loyal\": true,\n    \"social\": true,\n    \"docile\": true,\n    \"gentle\": true,\n    \"playful\": true,\n    \"sweet\": true,\n    \"strong\": true,\n    \"outgoing\" : true,\n    \"independent\": true\n  });\n\n\n  const toggleTemper = (categoryToggled) => {\n    if (categoryToggled === \"all\") {\n      setTemperFilter({\n        \"affectionate\" : true,\n        \"active\": true,\n        \"intelligent\": true,\n        \"loyal\": true,\n        \"social\": true,\n        \"docile\": true,\n        \"gentle\": true,\n        \"playful\": true,\n        \"sweet\": true,\n        \"strong\": true,\n        \"outgoing\" : true,\n        \"independent\": true\n      })\n      return;\n    }\n\n\n    let newTemperFilter;\n\n    let allTrue = true;\n    let allFalse = true;\n    for(const key of Object.keys(temperFilter)) {\n      if (temperFilter[key]) {\n        allFalse = false;\n      } else {\n        allTrue = false;\n      }\n    }\n\n    if (allTrue) {\n      newTemperFilter = {\n        \"affectionate\" : false,\n        \"active\": false,\n        \"intelligent\": false,\n        \"loyal\": false,\n        \"social\": false,\n        \"docile\": false,\n        \"gentle\": false,\n        \"playful\": false,\n        \"sweet\": false,\n        \"strong\": false,\n        \"outgoing\" : false,\n        \"independent\": false\n      };\n      newTemperFilter[categoryToggled] = true;\n    } else {\n      newTemperFilter = {...temperFilter, [categoryToggled]: !temperFilter[categoryToggled]}\n    }\n\n    if (allFalse) {\n      newTemperFilter = {\n        \"affectionate\" : true,\n        \"active\": true,\n        \"intelligent\": true,\n        \"loyal\": true,\n        \"social\": true,\n        \"docile\": true,\n        \"gentle\": true,\n        \"playful\": true,\n        \"sweet\": true,\n        \"strong\": true,\n        \"outgoing\" : true,\n        \"independent\": true\n      }\n    }\n    setTemperFilter(newTemperFilter);\n    console.log(newTemperFilter);\n  }\n\n\n  const [sizeFilter, setSizeFilter] = useState({\n    small: true,\n    medium: true,\n    large: true\n  });\n\n  const toggleSize = (categoryToggled) => {\n    if (categoryToggled === \"all\") {\n      setSizeFilter({\n        small: true,\n        medium: true,\n        large: true\n      });\n      return;\n    }\n    let newSizeFilter;\n    if (sizeFilter.small && sizeFilter.medium && sizeFilter.large) {\n      newSizeFilter = {\n        small: false,\n        medium: false,\n        large: false\n      };\n      newSizeFilter[categoryToggled] = true;\n    } else {\n      newSizeFilter = {...sizeFilter, [categoryToggled]: !sizeFilter[categoryToggled]}\n    }\n\n    if (!newSizeFilter.small && !newSizeFilter.medium && !newSizeFilter.large) {\n      newSizeFilter = {\n        small: true,\n        medium: true,\n        large: true\n      }\n    }\n    setSizeFilter(newSizeFilter);\n  }\n\n  const [sheddingFilter, setSheddingFilter] = useState({\n    minimal: true,\n    average: true,\n    seasonal: true,\n    constant: true\n  });\n\n  const toggleShedding = (categoryToggled) => {\n    if (categoryToggled === \"all\") {\n      setSheddingFilter({\n        minimal: true,\n        average: true,\n        seasonal: true,\n        constant: true\n      });\n      return;\n    }\n\n    let newSheddingFilter;\n    if (sheddingFilter.minimal && sheddingFilter.average && sheddingFilter.seasonal && sheddingFilter.constant) {\n      newSheddingFilter = {\n        minimal: false,\n        average: false,\n        seasonal: false,\n        constant: false\n      };\n      newSheddingFilter[categoryToggled] = true;\n    } else {\n      newSheddingFilter = {...sheddingFilter, [categoryToggled]: !sheddingFilter[categoryToggled]}\n    }\n\n    if (!newSheddingFilter.minimal && !newSheddingFilter.average && !newSheddingFilter.seasonal && !newSheddingFilter.constant) {\n      newSheddingFilter = {\n        minimal: true,\n        average: true,\n        seasonal: true,\n        constant: true\n      }\n    }\n    setSheddingFilter(newSheddingFilter);\n  }\n\n\n  const [hairFilter, setHairFilter] = useState({\n    short: true,\n    medium: true,\n    long: true\n  });\n\n  const toggleHair = (categoryToggled) => {\n    if (categoryToggled === \"all\") {\n      setHairFilter({\n        short: true,\n        medium: true,\n        long: true\n      });\n      return;\n    }\n\n    let newHairFilter;\n    if (hairFilter.short && hairFilter.medium && hairFilter.long) {\n      newHairFilter = {\n        short: false,\n        medium: false,\n        long: false\n      };\n      newHairFilter[categoryToggled] = true;\n    } else {\n      newHairFilter = {...hairFilter, [categoryToggled]: !hairFilter[categoryToggled]}\n    }\n\n    if (!newHairFilter.short && !newHairFilter.medium && !newHairFilter.long) {\n      newHairFilter = {\n        short: true,\n        medium: true,\n        long: true\n      }\n    }\n    setHairFilter(newHairFilter);\n  }\n\n\n  const restartFilter = () => {\n    toggleSize(\"all\")\n    toggleHair(\"all\")\n    toggleShedding(\"all\")\n    toggleTemper(\"all\")\n  }\n\n    return (\n      <div className=\"App\">\n        <CatPanel toggleSize={toggleSize}\n                  sizeFilter={sizeFilter}\n                  toggleShedding={toggleShedding}\n                  sheddingFilter={sheddingFilter}\n                  toggleHair={toggleHair}\n                  hairFilter={hairFilter}\n                  toggleTemper = {toggleTemper}\n                  temperFilter = {temperFilter}\n                  selectedCat = {selectedCat}\n\n        />\n        <CatDisplay\n          sizeFilter={sizeFilter}\n          sheddingFilter={sheddingFilter}\n          hairFilter={hairFilter}\n          temperFilter={temperFilter}\n          selectCatMain={selectCatMain}\n          restartFilter={restartFilter}\n        />\n      </div>\n    );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}