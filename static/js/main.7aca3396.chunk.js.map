{"version":3,"sources":["components/bar.js","components/catPanel.js","components/catPreview.js","components/catDetail.js","components/cats.js","App.js","reportWebVitals.js","index.js"],"names":["Bar","category","height","clickFunction","isOn","className","style","width","background","onClick","BarChart","data","currentFilter","_","map","value","key","CatPanel","toggleSize","sizeFilter","catSizeData","small","medium","large","catData","cat","Object","keys","sizeKey","includes","size","CatPreview","forwardRef","ref","selectCat","breed","src","process","alt","replace","CatDetail","join","weight","shedding","grooming","Description","split","info","i","History","CatDisplay","useState","selectedCat","setSelectedCat","catName","console","log","visibility","filter","result","App","setSizeFilter","categoryToggled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7aca3396.chunk.js","sourcesContent":["import React from \"react\";\nimport _ from 'lodash';\n\n\n\nconst Bar = ({ category, height, clickFunction, isOn }) => {\n  return (\n    <div\n      className=\"bar\"\n      style={{height: height, width: \"50px\", background: (isOn ? \"lightgreen\": \"grey\")}}\n      onClick={() => clickFunction(category) }\n    />\n  )\n};\n\nconst BarChart = ({data, clickFunction, currentFilter}) => {\n  return (\n    <div className=\"bar-chart\">\n      {_.map(data, (value, key) => {\n        return (\n          <div className=\"bar-and-text\" key={key}>\n            <Bar\n              height={value}\n              category={key}\n              clickFunction={clickFunction}\n              isOn={currentFilter[key]}\n              key={`bar${key}`}\n            />\n            <div\n              className=\"text\"\n              key={`text${key}`}\n            >\n              {key}\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default BarChart;","import catData from \"../cat_metadata.json\";\nimport React, {useState, useEffect} from \"react\";\nimport BarChart from \"./bar.js\";\nimport _ from 'lodash';\n\n\nconst CatPanel = ({toggleSize, sizeFilter}) => {\n  let catSizeData = {small: 0, medium: 0, large: 0};\n  for (const cat of catData) {\n    for (const sizeKey of Object.keys(catSizeData)) {\n      if (_.includes(cat.size, sizeKey)) {\n        catSizeData[sizeKey] ++;\n      }\n    }\n  }\n\n  return (\n    <div className=\"cat-panel\">\n      <BarChart\n        data={catSizeData}\n        clickFunction={toggleSize}\n        currentFilter={sizeFilter}\n      />\n    </div>\n  )\n}\n\nexport default CatPanel;\n","import React, {forwardRef} from \"react\";\n\n\nconst CatPreview = forwardRef(({cat, selectCat}, ref) => (\n    <div className=\"cat-card\" onClick={() => selectCat(cat.breed)} ref={ref}>\n      <img src= {process.env.PUBLIC_URL + \"/cat_pictures/\" +cat.breed + '.jpg'} alt={cat.breed} />\n      {cat.breed.replace( /([A-Z])/g, \" $1\" )}\n    </div>\n))\n\nexport default CatPreview;","import React from \"react\";\n\nconst CatDetail = ({cat, selectCat}) => (\n  <div className=\"popup\">\n    {!!cat &&\n    <div >\n      <img src= {process.env.PUBLIC_URL + \"/cat_pictures/\" +cat.breed + '.jpg'} alt={cat.breed} />\n      <div className=\"cat-info\">\n        <div className=\"breed-name\">{cat.breed.replace( /([A-Z])/g, \" $1\" )}</div>\n        {\n          !!cat[\"Alternate names\"] &&\n          <div className=\"alt-name\">Also Called: {cat[\"Alternate names\"].join(', ')} </div>\n        }\n        <div className=\"metadata\">\n          <div className=\"size\">{cat.size.join(' / ')}</div>\n          <div className=\"weight\">{cat.weight.join(' to ')} lb</div>\n          <div className=\"shedding\">{cat.shedding} shedding</div>\n          <div className=\"grooming\">{cat.grooming} grooming</div>\n        </div>\n\n        <div className=\"description\">\n          {cat.Description.split('\\n').map((info, i) => <div key={i}>{info}</div>)}\n        </div>\n        <div className=\"history\">\n          {cat.History.split('\\n').map((info, i) => <div key={i}>{info}</div>)}\n        </div>\n      </div>\n\n      <div className=\"close-button\" onClick={() => selectCat(\"\")}>close</div>\n    </div>\n    }\n  </div>\n)\n\nexport default CatDetail;","import React, {useState} from \"react\";\nimport catData from \"../cat_metadata.json\";\nimport CatPreview from './catPreview.js';\nimport CatDetail from './catDetail.js';\nimport FlipMove from 'react-flip-move';\n\n\nconst CatDisplay = ({sizeFilter}) => {\n\n  const [selectedCat, setSelectedCat] = useState(\"\");\n\n  const selectCat = (catName) => {\n    console.log(catName + \" selected\");\n    setSelectedCat(catName);\n  }\n\n  return (\n    <div className=\"all-cats\">\n      <div className=\"cat-details\" style={{visibility: selectedCat !== \"\" ? \"visible\" : \"hidden\"}}>\n        <CatDetail\n          cat={catData.filter((cat) => (cat.breed===selectedCat))[0]}\n          selectCat={selectCat}\n        />\n      </div>\n      <div className=\"cat-display\">\n        <FlipMove className=\"flip-move\">\n          {\n            catData\n              .filter((cat) => {\n                let result = false;\n                if (cat.size != null) {\n                  for (const size of cat.size) {\n                    if (sizeFilter[size]) {\n                      result = true;\n                    }\n                  }\n                }\n                return result;\n              })\n              .map((cat, i) =>\n                <CatPreview cat={cat} selectCat={selectCat} key={cat.breed} />\n              )\n          }\n        </FlipMove>\n      </div>\n  </div>\n  )\n}\n\nexport default CatDisplay;","import './App.css';\nimport React, {Component, useState} from 'react';\nimport catData from './cat_metadata.json';\nimport CatPanel from './components/catPanel.js';\nimport CatDisplay from \"./components/cats\";\n\nconst App = () => {\n\n  const [sizeFilter, setSizeFilter] = useState({\n    small: true,\n    medium: true,\n    large: true\n  });\n\n  const toggleSize = (categoryToggled) => {\n    console.log(\"toggle size \" + categoryToggled + \" to \" + !sizeFilter[categoryToggled]);\n    setSizeFilter({...sizeFilter, [categoryToggled]: !sizeFilter[categoryToggled]})\n  }\n\n    return (\n      <div className=\"App\">\n        <CatPanel toggleSize={toggleSize} sizeFilter={sizeFilter}/>\n        <CatDisplay sizeFilter={sizeFilter}/>\n      </div>\n    );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}