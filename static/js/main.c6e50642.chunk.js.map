{"version":3,"sources":["components/bar.js","components/catPanel.js","components/catPreview.js","components/catDetail.js","components/cats.js","App.js","reportWebVitals.js","index.js"],"names":["Bar","category","height","width","clickFunction","isOn","useState","hover","setHover","className","style","background","onClick","onMouseEnter","onMouseLeave","TextButton","_","capitalize","BarChart","data","currentFilter","title","isAllTrue","Object","keys","key","map","value","length","Title","CatPanel","toggleSize","sizeFilter","toggleShedding","sheddingFilter","toggleHair","hairFilter","catSizeData","small","medium","large","catData","cat","sizeKey","includes","size","catSheddingData","minimal","average","seasonal","constant","shedding","catHairData","short","long","CatPreview","forwardRef","ref","selectCat","breed","src","process","alt","replace","CatDetail","join","weight","grooming","Description","split","info","i","History","CatDisplay","selectedCat","setSelectedCat","catName","console","log","hideOnOverlayClicked","isVisible","onCloseClicked","filter","sizeResult","sheddingResult","App","setSizeFilter","setSheddingFilter","setHairFilter","categoryToggled","newSizeFilter","newSheddingFilter","newHairFilter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6e50642.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport _ from 'lodash';\n\nconst allWidth = 300;\n\nconst Bar = ({\n    category,\n    height,\n    width,\n    clickFunction,\n    isOn\n}) => {\n  const [hover, setHover] = useState(false)\n  return (\n    <div\n      className=\"bar\"\n      style={{\n        height: height,\n        width: width,\n        background: (\n          hover? \"grey\" :\n            (isOn ? \"grey\": \"lightgrey\")\n        )\n      }}\n      onClick={() => clickFunction(category)}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    />\n  )\n};\n\n\nconst TextButton = ({\n  category,\n  width,\n  clickFunction,\n  isOn\n                    }) =>\n{\n  const [hover, setHover] = useState(false)\n  return (\n    <div\n      className=\"text\"\n      style = {\n        {\n          background: (\n            hover? \"grey\" :\n              (isOn ? \"grey\": \"lightgrey\")\n          ),\n          width: width\n        }\n      }\n      onClick={() => clickFunction(category)}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    >\n      <div>\n        {_.capitalize(category)}\n      </div>\n    </div>\n  )\n}\n\n\n\nconst BarChart = ({\n                    data,\n                    clickFunction,\n                    currentFilter,\n                    title\n}) => {\n  let isAllTrue = true;\n  for (const key of Object.keys(data)) {\n    if (!currentFilter[key]) {\n      isAllTrue = false;\n    }\n  }\n\n  const [hover, setHover] = useState(false)\n\n\n  return (\n    <div className=\"bar-chart\">\n      <div className=\"title\">\n        {title}\n      </div>\n      {_.map(data, (value, key) => {\n        return (\n          <div className=\"bar-and-text\" key={key}>\n            <Bar\n              height={isAllTrue ? 0 : value}\n              category={key}\n              clickFunction={clickFunction}\n              isOn={!isAllTrue && currentFilter[key]}\n              width = {allWidth / Object.keys(data).length}\n              key={`bar${key}`}\n            />\n            <TextButton\n              category={key}\n              clickFunction={clickFunction}\n              isOn={!isAllTrue && currentFilter[key]}\n              width = {allWidth / Object.keys(data).length}\n              key={`text${key}`}\n            />\n\n\n          </div>\n        )\n      })}\n      <div\n        className=\"all-button\"\n        onClick={() => clickFunction(\"all\")}\n        style = {{\n          width: `${allWidth}px`,\n          background: ((\n            hover? \"grey\" :\n              (isAllTrue ? \"grey\": \"lightgrey\")\n          ))\n        }}\n        onMouseEnter={() => setHover(true)}\n        onMouseLeave={() => setHover(false)}\n      >\n        All\n      </div>\n    </div>\n  );\n}\n\nexport default BarChart;","import catData from \"../cat_metadata.json\";\nimport React, {useState, useEffect} from \"react\";\nimport BarChart from \"./bar.js\";\nimport _ from 'lodash';\n\nconst Title = () => (\n  <div className=\"title\">\n    <div className=\"catology\">\n      <span className=\"cat\">Cat</span>\n      <span className=\"ology\">ology</span>\n    </div>\n    <div className=\"description\">\n      Catology is what anyone who owns a cat is doomed to practice for\n      the rest of their pet's natual life. Little do most cat owners realize\n      that they are being pulled into this dangerous cult of cats.\n    </div>\n  </div>\n)\n\nconst CatPanel = (\n  {\n    toggleSize,\n    sizeFilter,\n    toggleShedding,\n    sheddingFilter,\n    toggleHair,\n    hairFilter\n  }) => {\n  let catSizeData = {small: 0, medium: 0, large: 0};\n  for (const cat of catData) {\n    for (const sizeKey of Object.keys(catSizeData)) {\n      if (_.includes(cat.size, sizeKey)) {\n        catSizeData[sizeKey]++;\n      }\n    }\n  }\n\n    let catSheddingData = {minimal: 0, average: 0, seasonal: 0, constant: 0};\n    for (const cat of catData) {\n      for (const key of Object.keys(catSheddingData)) {\n        if (_.includes(cat.shedding, key)) {\n          catSheddingData[key] ++;\n        }\n      }\n    }\n\n  let catHairData = {short: 0, medium: 0, long: 0};\n  for (const cat of catData) {\n    for (const key of Object.keys(catHairData)) {\n      if (_.includes(cat[\"hair length\"], key)) {\n        catHairData[key] ++;\n      }\n    }\n  }\n\n      return (\n    <div className=\"cat-panel\">\n      <Title />\n      <BarChart\n        data={catSizeData}\n        clickFunction={toggleSize}\n        currentFilter={sizeFilter}\n        title=\"Size\"\n      />\n      <BarChart\n        data={catHairData}\n        clickFunction={toggleHair}\n        currentFilter={hairFilter}\n        title = \"Hair Length\"\n      />\n      <BarChart\n        data={catSheddingData}\n        clickFunction={toggleShedding}\n        currentFilter={sheddingFilter}\n        title = \"Shedding\"\n      />\n    </div>\n  )\n}\n\nexport default CatPanel;\n","import React, {forwardRef} from \"react\";\n\n\nconst CatPreview = forwardRef(({cat, selectCat}, ref) => (\n    <div className=\"cat-card\" onClick={() => selectCat(cat.breed)} ref={ref}>\n      <center>\n        <img src= {process.env.PUBLIC_URL + \"/cat_pictures/\" +cat.breed + '.jpg'} alt={cat.breed} />\n      </center>\n\n      <div className=\"caption\">\n        {cat.breed.replace( /([A-Z])/g, \" $1\" )}\n      </div>\n    </div>\n))\n\nexport default CatPreview;","import React from \"react\";\n\nconst CatDetail = ({cat, selectCat}) => (\n  <div className=\"popup\" onClick={() => selectCat(\"\")}>\n    {!!cat &&\n    <div>\n      <img src= {process.env.PUBLIC_URL + \"/cat_pictures/\" +cat.breed + '.jpg'} alt={cat.breed} />\n      <div className=\"cat-info\">\n        <div className=\"breed-name\">{cat.breed.replace( /([A-Z])/g, \" $1\" )}</div>\n        {\n          cat[\"Alternate names\"]  ?\n          <div className=\"alt-name\">Also Called: {cat[\"Alternate names\"].join(', ')} </div> :\n            <div className=\"facts-title\">Facts: </div>\n        }\n        <div className=\"metadata\">\n          <div className=\"size\">{cat.size.join(' / ')}</div>\n          <div className=\"weight\">{cat.weight.join(' to ')} lb</div>\n          <div className=\"hair\">{cat[\"hair length\"].join(' / ')} hair</div>\n          <div className=\"shedding\">{cat.shedding} shedding</div>\n          <div className=\"grooming\">{cat.grooming} grooming</div>\n        </div>\n\n        <div className=\"description\">\n          {cat.Description.split('\\n').map((info, i) => <div key={i}>{info}</div>)}\n        </div>\n        <div className=\"history\">\n          {cat.History.split('\\n').map((info, i) => <div key={i}>{info}</div>)}\n        </div>\n      </div>\n\n      {/*<div className=\"close-button\" onClick={() => selectCat(\"\")}>close</div>*/}\n    </div>\n    }\n  </div>\n)\n\nexport default CatDetail;","import React, {useState} from \"react\";\nimport catData from \"../cat_metadata.json\";\nimport CatPreview from './catPreview.js';\nimport CatDetail from './catDetail.js';\nimport FlipMove from 'react-flip-move';\n// import Popup from 'react-animated-popup';\nimport {SkyLightStateless} from \"react-skylight\";\n\n\nconst CatDisplay = (\n  {\n    sizeFilter,\n    sheddingFilter\n}) => {\n\n  const [selectedCat, setSelectedCat] = useState(\"\");\n\n  const selectCat = (catName) => {\n    console.log(catName + \" selected\");\n    setSelectedCat(catName);\n  }\n\n  return (\n    <div className=\"all-cats\">\n\n      <SkyLightStateless className=\"popup-lib\"\n                         hideOnOverlayClicked\n                         isVisible={selectedCat !== \"\"}\n                         onCloseClicked={() => selectCat(\"\")}\n      >\n        <CatDetail\n          cat={catData.filter((cat) => (cat.breed===selectedCat))[0]}\n          selectCat={selectCat}\n        />\n      </SkyLightStateless>\n\n      <div className=\"cat-display\">\n        <FlipMove className=\"flip-move\">\n          {\n            catData\n              .filter((cat) => {\n                let sizeResult = false;\n                let sheddingResult = false;\n                if (cat.size != null && cat.shedding != null) {\n                  for (const size of cat.size) {\n                    if (sizeFilter[size]) {\n                      sizeResult = true;\n                    }\n                  }\n\n                  for (const shedding of cat.shedding) {\n                    if (sheddingFilter[shedding]) {\n                      sheddingResult = true;\n                    }\n                  }\n                }\n                return sizeResult && sheddingResult;\n              })\n              .map((cat, i) =>\n                <CatPreview cat={cat} selectCat={selectCat} key={cat.breed} />\n              )\n          }\n        </FlipMove>\n      </div>\n  </div>\n  )\n}\n\nexport default CatDisplay;","import './App.css';\nimport React, {useState} from 'react';\nimport CatPanel from './components/catPanel.js';\nimport CatDisplay from \"./components/cats\";\nimport size from \"d3-selection/src/selection/size\";\n\nconst App = () => {\n\n  const [sizeFilter, setSizeFilter] = useState({\n    small: true,\n    medium: true,\n    large: true\n  });\n\n  const toggleSize = (categoryToggled) => {\n    if (categoryToggled === \"all\") {\n      setSizeFilter({\n        small: true,\n        medium: true,\n        large: true\n      });\n      return;\n    }\n    let newSizeFilter;\n    if (sizeFilter.small && sizeFilter.medium && sizeFilter.large) {\n      newSizeFilter = {\n        small: false,\n        medium: false,\n        large: false\n      };\n      newSizeFilter[categoryToggled] = true;\n    } else {\n      newSizeFilter = {...sizeFilter, [categoryToggled]: !sizeFilter[categoryToggled]}\n    }\n\n    if (!newSizeFilter.small && !newSizeFilter.medium && !newSizeFilter.large) {\n      newSizeFilter = {\n        small: true,\n        medium: true,\n        large: true\n      }\n    }\n    setSizeFilter(newSizeFilter);\n  }\n\n  const [sheddingFilter, setSheddingFilter] = useState({\n    minimal: true,\n    average: true,\n    seasonal: true,\n    constant: true\n  });\n\n  const toggleShedding = (categoryToggled) => {\n    if (categoryToggled === \"all\") {\n      setSheddingFilter({\n        minimal: true,\n        average: true,\n        seasonal: true,\n        constant: true\n      });\n      return;\n    }\n\n    let newSheddingFilter;\n    if (sheddingFilter.minimal && sheddingFilter.average && sheddingFilter.seasonal && sheddingFilter.constant) {\n      newSheddingFilter = {\n        minimal: false,\n        average: false,\n        seasonal: false,\n        constant: false\n      };\n      newSheddingFilter[categoryToggled] = true;\n    } else {\n      newSheddingFilter = {...sheddingFilter, [categoryToggled]: !sheddingFilter[categoryToggled]}\n    }\n\n    if (!newSheddingFilter.minimal && !newSheddingFilter.average && !newSheddingFilter.seasonal && !newSheddingFilter.constant) {\n      newSheddingFilter = {\n        minimal: true,\n        average: true,\n        seasonal: true,\n        constant: true\n      }\n    }\n    setSheddingFilter(newSheddingFilter);\n  }\n\n\n  const [hairFilter, setHairFilter] = useState({\n    short: true,\n    medium: true,\n    long: true\n  });\n\n  const toggleHair = (categoryToggled) => {\n    if (categoryToggled === \"all\") {\n      setHairFilter({\n        short: true,\n        medium: true,\n        long: true\n      });\n      return;\n    }\n\n    let newHairFilter;\n    if (hairFilter.short && hairFilter.medium && hairFilter.long) {\n      newHairFilter = {\n        short: false,\n        medium: false,\n        long: false\n      };\n      newHairFilter[categoryToggled] = true;\n    } else {\n      newHairFilter = {...hairFilter, [categoryToggled]: !hairFilter[categoryToggled]}\n    }\n\n    if (!newHairFilter.short && !newHairFilter.medium && !newHairFilter.long) {\n      newHairFilter = {\n        short: true,\n        medium: true,\n        long: true\n      }\n    }\n    setHairFilter(newHairFilter);\n  }\n\n    return (\n      <div className=\"App\">\n        <CatPanel toggleSize={toggleSize}\n                  sizeFilter={sizeFilter}\n                  toggleShedding={toggleShedding}\n                  sheddingFilter={sheddingFilter}\n                  toggleHair={toggleHair}\n                  hairFilter={hairFilter}\n        />\n        <CatDisplay\n          sizeFilter={sizeFilter}\n          sheddingFilter={sheddingFilter}\n        />\n      </div>\n    );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}