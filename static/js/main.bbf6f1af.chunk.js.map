{"version":3,"sources":["components/bar.js","components/catPanel.js","components/catPreview.js","components/cats.js","App.js","reportWebVitals.js","index.js"],"names":["Bar","category","height","clickFunction","isOn","className","style","width","background","onClick","BarChart","data","currentFilter","_","map","value","key","CatPanel","catSizeData","small","medium","large","catData","cat","Object","keys","sizeKey","includes","size","useState","sizeFilter","setSizeFilter","categoryToggled","console","log","CatPreview","breed","CatDisplay","i","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"souEAKMA,EAAM,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,cAAeC,EAAW,EAAXA,KAC9C,OACE,qBACEC,UAAU,MACVC,MAAO,CAACJ,OAAQA,EAAQK,MAAO,OAAQC,WAAaJ,EAAO,aAAc,QACzEK,QAAS,kBAAMN,EAAcF,OA+BpBS,EA1BE,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,KAAMR,EAAkC,EAAlCA,cAAeS,EAAmB,EAAnBA,cACtC,OACE,qBAAKP,UAAU,YAAf,SACGQ,IAAEC,IAAIH,GAAM,SAACI,EAAOC,GACnB,OACE,sBAAKX,UAAU,eAAf,UACE,cAAC,EAAD,CACEH,OAAQa,EACRd,SAAUe,EACVb,cAAeA,EACfC,KAAMQ,EAAcI,IAJtB,aAKaA,IAEb,qBACEX,UAAU,OADZ,SAIGW,GAJH,cAEcA,MAVmBA,SCoB9BC,EAlCE,WACf,IADqB,EACjBC,EAAc,CAACC,MAAO,EAAGC,OAAQ,EAAGC,MAAO,GAD1B,cAEHC,GAFG,IAErB,2BACE,IAD0B,IAAjBC,EAAgB,QACzB,MAAsBC,OAAOC,KAAKP,GAAlC,eAAgD,CAA3C,IAAMQ,EAAO,KACZb,IAAEc,SAASJ,EAAIK,KAAMF,IACvBR,EAAYQ,MALG,oCAUeG,mBAAS,CAC3CV,OAAO,EACPC,QAAQ,EACRC,OAAO,IAbY,mBAUdS,EAVc,KAUFC,EAVE,KAqBrB,OACE,qBAAK1B,UAAU,YAAf,SAEE,cAAC,EAAD,CACEM,KAAMO,EACNf,cAVa,SAAC6B,GAClBC,QAAQC,IAAI,eAAiBF,EAAkB,QAAUF,EAAWE,IACpED,EAAc,2BAAID,GAAL,kBAAkBE,GAAmBF,EAAWE,OASzDpB,cAAekB,OCvBRK,EARI,SAAC,GAAD,IAAEZ,EAAF,EAAEA,IAAF,OACjB,qBAAKlB,UAAU,WAAf,SAEIkB,EAAIa,SCSKC,EAVI,kBACjB,qBAAKhC,UAAU,cAAf,SAEIiB,EAAQR,KAAI,SAACS,EAAKe,GAAN,OACZ,cAAC,EAAD,CAAYf,IAAKA,GAAUe,SCOlBC,MATf,WACI,OACE,sBAAKlC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCEOmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bbf6f1af.chunk.js","sourcesContent":["import React from \"react\";\nimport _ from 'lodash';\n\n\n\nconst Bar = ({ category, height, clickFunction, isOn }) => {\n  return (\n    <div\n      className=\"bar\"\n      style={{height: height, width: \"50px\", background: (isOn ? \"lightgreen\": \"grey\")}}\n      onClick={() => clickFunction(category) }\n    />\n  )\n};\n\nconst BarChart = ({data, clickFunction, currentFilter}) => {\n  return (\n    <div className=\"bar-chart\">\n      {_.map(data, (value, key) => {\n        return (\n          <div className=\"bar-and-text\" key={key}>\n            <Bar\n              height={value}\n              category={key}\n              clickFunction={clickFunction}\n              isOn={currentFilter[key]}\n              key={`bar${key}`}\n            />\n            <div\n              className=\"text\"\n              key={`text${key}`}\n            >\n              {key}\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default BarChart;","import catData from \"../cat_metadata.json\";\nimport React, {useState, useEffect} from \"react\";\nimport BarChart from \"./bar.js\";\nimport _ from 'lodash';\n\n\nconst CatPanel = () => {\n  let catSizeData = {small: 0, medium: 0, large: 0};\n  for (const cat of catData) {\n    for (const sizeKey of Object.keys(catSizeData)) {\n      if (_.includes(cat.size, sizeKey)) {\n        catSizeData[sizeKey] ++;\n      }\n    }\n  }\n\n  const [sizeFilter, setSizeFilter] = useState({\n    small: true,\n    medium: true,\n    large: true\n  });\n\n  const toggleSize = (categoryToggled) => {\n    console.log(\"toggle size \" + categoryToggled + \" to \" + !sizeFilter[categoryToggled]);\n    setSizeFilter({...sizeFilter, [categoryToggled]: !sizeFilter[categoryToggled]})\n  }\n\n  return (\n    <div className=\"cat-panel\">\n\n      <BarChart\n        data={catSizeData}\n        clickFunction={toggleSize}\n        currentFilter={sizeFilter}\n      />\n\n    </div>\n  )\n}\n\nexport default CatPanel;\n","import React from \"react\";\n\nconst CatPreview = ({cat}) => (\n  <div className=\"cat-card\">\n    {\n      cat.breed\n    }\n  </div>\n)\n\nexport default CatPreview;","import React from \"react\";\nimport catData from \"../cat_metadata.json\";\nimport CatPreview from './catPreview.js';\n\nconst CatDisplay = () => (\n  <div className=\"cat-display\">\n    {\n      catData.map((cat, i) =>\n      <CatPreview cat={cat} key={i} />\n      )\n    }\n  </div>\n)\n\nexport default CatDisplay;","import './App.css';\nimport React, {Component} from 'react';\nimport catData from './cat_metadata.json';\nimport CatPanel from './components/catPanel.js';\nimport CatDisplay from \"./components/cats\";\n\nfunction App() {\n    return (\n      <div className=\"App\">\n        <CatPanel />\n        <CatDisplay />\n      </div>\n    );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}