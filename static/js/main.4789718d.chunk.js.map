{"version":3,"sources":["components/bar.js","components/catPanel.js","components/catPreview.js","components/catDetail.js","components/cats.js","App.js","reportWebVitals.js","index.js"],"names":["Bar","category","height","clickFunction","isOn","useState","hover","setHover","className","style","width","background","onClick","onMouseEnter","onMouseLeave","BarChart","data","currentFilter","_","map","value","key","CatPanel","toggleSize","sizeFilter","toggleShedding","sheddingFilter","catSizeData","small","medium","large","catData","cat","Object","keys","sizeKey","includes","size","catSheddingData","minimal","average","seasonal","constant","shedding","CatPreview","forwardRef","ref","selectCat","breed","src","process","alt","replace","CatDetail","join","weight","grooming","Description","split","info","i","History","CatDisplay","selectedCat","setSelectedCat","catName","console","log","hideOnOverlayClicked","isVisible","onCloseClicked","filter","sizeResult","sheddingResult","App","setSizeFilter","setSheddingFilter","categoryToggled","newSizeFilter","newSheddingFilter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4789718d.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport _ from 'lodash';\n\n\n\nconst Bar = ({ category, height, clickFunction, isOn }) => {\n  const [hover, setHover] = useState(false)\n  return (\n    <div\n      className=\"bar\"\n      style={{\n        height: height,\n        width: \"50px\",\n        background: (\n          hover? \"orange\" :\n            (isOn ? \"orange\": \"grey\")\n        )\n      }}\n      onClick={() => clickFunction(category)}\n      onMouseEnter={() => setHover(true)}\n      onMouseLeave={() => setHover(false)}\n    />\n  )\n};\n\nconst BarChart = ({data, clickFunction, currentFilter}) => {\n  return (\n    <div className=\"bar-chart\">\n      {_.map(data, (value, key) => {\n        return (\n          <div className=\"bar-and-text\" key={key}>\n            <Bar\n              height={value}\n              category={key}\n              clickFunction={clickFunction}\n              isOn={currentFilter[key]}\n              key={`bar${key}`}\n            />\n            <div\n              className=\"text\"\n              key={`text${key}`}\n            >\n              {key}\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  );\n}\n\nexport default BarChart;","import catData from \"../cat_metadata.json\";\nimport React, {useState, useEffect} from \"react\";\nimport BarChart from \"./bar.js\";\nimport _ from 'lodash';\n\n\nconst CatPanel = (\n  {\n    toggleSize,\n    sizeFilter,\n    toggleShedding,\n    sheddingFilter\n  }) => {\n  let catSizeData = {small: 0, medium: 0, large: 0};\n  for (const cat of catData) {\n    for (const sizeKey of Object.keys(catSizeData)) {\n      if (_.includes(cat.size, sizeKey)) {\n        catSizeData[sizeKey]++;\n      }\n    }\n  }\n\n    let catSheddingData = {minimal: 0, average: 0, seasonal: 0, constant: 0};\n    for (const cat of catData) {\n      for (const key of Object.keys(catSheddingData)) {\n        if (_.includes(cat.shedding, key)) {\n          catSheddingData[key] ++;\n        }\n      }\n    }\n\n      return (\n    <div className=\"cat-panel\">\n      <BarChart\n        data={catSizeData}\n        clickFunction={toggleSize}\n        currentFilter={sizeFilter}\n      />\n      <BarChart\n        data={catSheddingData}\n        clickFunction={toggleShedding}\n        currentFilter={sheddingFilter}\n      />\n    </div>\n  )\n}\n\nexport default CatPanel;\n","import React, {forwardRef} from \"react\";\n\n\nconst CatPreview = forwardRef(({cat, selectCat}, ref) => (\n    <div className=\"cat-card\" onClick={() => selectCat(cat.breed)} ref={ref}>\n      <center>\n        <img src= {process.env.PUBLIC_URL + \"/cat_pictures/\" +cat.breed + '.jpg'} alt={cat.breed} />\n      </center>\n\n      <div className=\"caption\">\n        {cat.breed.replace( /([A-Z])/g, \" $1\" )}\n      </div>\n    </div>\n))\n\nexport default CatPreview;","import React from \"react\";\n\nconst CatDetail = ({cat, selectCat}) => (\n  <div className=\"popup\" onClick={() => selectCat(\"\")}>\n    {!!cat &&\n    <div>\n      <img src= {process.env.PUBLIC_URL + \"/cat_pictures/\" +cat.breed + '.jpg'} alt={cat.breed} />\n      <div className=\"cat-info\">\n        <div className=\"breed-name\">{cat.breed.replace( /([A-Z])/g, \" $1\" )}</div>\n        {\n          cat[\"Alternate names\"]  ?\n          <div className=\"alt-name\">Also Called: {cat[\"Alternate names\"].join(', ')} </div> :\n            <div className=\"facts-title\">Facts: </div>\n        }\n        <div className=\"metadata\">\n          <div className=\"size\">{cat.size.join(' / ')}</div>\n          <div className=\"weight\">{cat.weight.join(' to ')} lb</div>\n          <div className=\"hair\">{cat[\"hair length\"].join(' / ')} hair</div>\n          <div className=\"shedding\">{cat.shedding} shedding</div>\n          <div className=\"grooming\">{cat.grooming} grooming</div>\n        </div>\n\n        <div className=\"description\">\n          {cat.Description.split('\\n').map((info, i) => <div key={i}>{info}</div>)}\n        </div>\n        <div className=\"history\">\n          {cat.History.split('\\n').map((info, i) => <div key={i}>{info}</div>)}\n        </div>\n      </div>\n\n      <div className=\"close-button\" onClick={() => selectCat(\"\")}>close</div>\n    </div>\n    }\n  </div>\n)\n\nexport default CatDetail;","import React, {useState} from \"react\";\nimport catData from \"../cat_metadata.json\";\nimport CatPreview from './catPreview.js';\nimport CatDetail from './catDetail.js';\nimport FlipMove from 'react-flip-move';\n// import Popup from 'react-animated-popup';\nimport {SkyLightStateless} from \"react-skylight\";\n\n\nconst CatDisplay = (\n  {\n    sizeFilter,\n    sheddingFilter\n}) => {\n\n  const [selectedCat, setSelectedCat] = useState(\"\");\n\n  const selectCat = (catName) => {\n    console.log(catName + \" selected\");\n    setSelectedCat(catName);\n  }\n\n  return (\n    <div className=\"all-cats\">\n\n      <SkyLightStateless className=\"popup-lib\"\n                         hideOnOverlayClicked\n                         isVisible={selectedCat !== \"\"}\n                         onCloseClicked={() => selectCat(\"\")}\n      >\n        <CatDetail\n          cat={catData.filter((cat) => (cat.breed===selectedCat))[0]}\n          selectCat={selectCat}\n        />\n      </SkyLightStateless>\n\n      <div className=\"cat-display\">\n        <FlipMove className=\"flip-move\">\n          {\n            catData\n              .filter((cat) => {\n                let sizeResult = false;\n                let sheddingResult = false;\n                if (cat.size != null && cat.shedding != null) {\n                  for (const size of cat.size) {\n                    if (sizeFilter[size]) {\n                      sizeResult = true;\n                    }\n                  }\n\n                  for (const shedding of cat.shedding) {\n                    if (sheddingFilter[shedding]) {\n                      sheddingResult = true;\n                    }\n                  }\n                }\n                return sizeResult && sheddingResult;\n              })\n              .map((cat, i) =>\n                <CatPreview cat={cat} selectCat={selectCat} key={cat.breed} />\n              )\n          }\n        </FlipMove>\n      </div>\n  </div>\n  )\n}\n\nexport default CatDisplay;","import './App.css';\nimport React, {useState} from 'react';\nimport CatPanel from './components/catPanel.js';\nimport CatDisplay from \"./components/cats\";\nimport size from \"d3-selection/src/selection/size\";\n\nconst App = () => {\n\n  const [sizeFilter, setSizeFilter] = useState({\n    small: true,\n    medium: true,\n    large: true\n  });\n\n  const toggleSize = (categoryToggled) => {\n    let newSizeFilter;\n    if (sizeFilter.small && sizeFilter.medium && sizeFilter.large) {\n      newSizeFilter = {\n        small: false,\n        medium: false,\n        large: false\n      };\n      newSizeFilter[categoryToggled] = true;\n    } else {\n      newSizeFilter = {...sizeFilter, [categoryToggled]: !sizeFilter[categoryToggled]}\n    }\n\n    if (!newSizeFilter.small && !newSizeFilter.medium && !newSizeFilter.large) {\n      newSizeFilter = {\n        small: true,\n        medium: true,\n        large: true\n      }\n    }\n    setSizeFilter(newSizeFilter);\n  }\n\n  const [sheddingFilter, setSheddingFilter] = useState({\n    minimal: true,\n    average: true,\n    seasonal: true,\n    constant: true\n  });\n\n  const toggleShedding = (categoryToggled) => {\n    let newSheddingFilter;\n    if (sheddingFilter.minimal && sheddingFilter.average && sheddingFilter.seasonal && sheddingFilter.constant) {\n      newSheddingFilter = {\n        minimal: false,\n        average: false,\n        seasonal: false,\n        constant: false\n      };\n      newSheddingFilter[categoryToggled] = true;\n    } else {\n      newSheddingFilter = {...sheddingFilter, [categoryToggled]: !sheddingFilter[categoryToggled]}\n    }\n\n    if (!newSheddingFilter.minimal && !newSheddingFilter.average && !newSheddingFilter.seasonal && !newSheddingFilter.constant) {\n      newSheddingFilter = {\n        minimal: true,\n        average: true,\n        seasonal: true,\n        constant: true\n      }\n    }\n    setSheddingFilter(newSheddingFilter);\n  }\n\n    return (\n      <div className=\"App\">\n        <CatPanel toggleSize={toggleSize}\n                  sizeFilter={sizeFilter}\n                  toggleShedding={toggleShedding}\n                  sheddingFilter={sheddingFilter}\n        />\n        <CatDisplay\n          sizeFilter={sizeFilter}\n          sheddingFilter={sheddingFilter}\n        />\n      </div>\n    );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}